# Use an Ubuntu base image for compatibility
FROM nvidia/cuda:11.8.0-runtime-ubuntu20.04

ENV DEBIAN_FRONTEND=noninteractive
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility

# Set environment variables for CUDA
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=$CUDA_HOME/bin:$PATH
ENV LD_LIBRARY_PATH=$CUDA_HOME/lib64:$LD_LIBRARY_PATH

WORKDIR /workspace

# Install essential system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    wget \
    curl \
    git \
    python3 \
    python3-pip \
    cmake \
    gnupg \
    libgl1 \
    libglib2.0-0 \
    sudo \
    software-properties-common \
    cuda-toolkit-11-8 \
    && rm -rf /var/lib/apt/lists/*

# Upgrade pip and install basic Python build tools
RUN python3 -m pip install --upgrade pip setuptools wheel ninja


# Ensure correct CUDA symlink
RUN ln -s /usr/local/cuda-11.8 /usr/local/cuda

# Install PyTorch with CUDA 11.8
RUN pip install --no-cache-dir torch==2.4.1+cu118 torchvision==0.19.1+cu118 torchaudio==2.4.1+cu118 --index-url https://download.pytorch.org/whl/cu118

# Install MMEngine
RUN pip install --no-cache-dir mmengine==0.8.0

# Install remaining dependencies (there was a suggestion to remove the next line. I am keeping it for now. Analyze?)
RUN pip install --no-cache-dir requests==2.31 openxlab --force-reinstall
RUN pip install --no-cache-dir -U openmim

# Install MMCV using OpenMIM with CUDA extensions enabled
# RUN MMCV_WITH_OPS=1 mim install 'mmcv-full>=1.7.1' --no-cache-dir
RUN MMCV_WITH_OPS=1 pip install "mmcv>=2.1.0,<2.2.0" --no-cache-dir


# Clone and install mmdetection v3.2.0 in editable mode
WORKDIR /workspace/mmdetection

RUN git clone https://github.com/open-mmlab/mmdetection.git /workspace/mmdetection && \
    cd /workspace/mmdetection && \
    git checkout v3.2.0 && \
    pip install -v -e .

# Set default workdir for notebooks and dev work
WORKDIR /workspace

# Install dependencies (including networkx for Python 3.8 compatibility)
RUN python3 -m pip install --no-cache-dir networkx==3.1 pytz==2023.3 requests==2.31 rich==13.6.0 tqdm==4.67.1 packaging>=22.0

# Install Jupyter and data tools
RUN pip install --no-cache-dir jupyterlab notebook ipykernel matplotlib pandas numpy

# Expose the Jupyter Notebook port
EXPOSE 8888

# Start the Jupyter Notebook server with necessary configurations
CMD ["jupyter", "notebook", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root"]
